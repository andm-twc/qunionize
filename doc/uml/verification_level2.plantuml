@startuml
title Level2 Verification
actor User 
actor Signer
User -> Signer: agree on identity check
note right
Signer must trust User
Signer must have Level2 
end note
Signer -> User : Ask to open app in Identification Mode
User -> UserApp : open identification flow
UserApp -> User : show UUID as QR Code
Signer -> SignerApp : scan QR Code
SignerApp -> Server : /getUser/UUID
Server -> SignerApp : (UUID, Public Key, CompanyName, CompanyAddress)
Signer -> Signer : check that details match
Signer -> SignerApp : confirm details
SignerApp -> SignerApp : generate RandomSequence
SignerApp -> SignerApp : encrypt RandomSequence on User's Public Key
SignerApp -> Signer : show EncPub(RandomSequence) as QR-Code
User -> UserApp : scan QR Code
UserApp -> UserApp : decrypt: DecPriv(EncPub(RandomSequence))
UserApp -> User : show as QR Code (RandomSequence')
Signer -> SignerApp : scan QR Code
SignerApp -> SignerApp : compare generated and received RandomSequences
SignerApp -> SignerApp : sign users Public Key
SignerApp -> Server : /registerSignature/UUID {Sig(PublicKey)}
Server -> Server : store (UUID, Sig) in the database
@enduml

